{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Models/marketDetailsResponse.ts","./src/app/Models/messageModel.ts","./src/app/Modules/about/about.component.ts","./src/app/Modules/about/about.component.html","./src/app/Modules/friendly-message/friendly-message.component.ts","./src/app/Modules/friendly-message/friendly-message.component.html","./src/app/Modules/load-spinner/load-spinner.component.ts","./src/app/Modules/load-spinner/load-spinner.component.html","./src/app/Services/geolocation.service.ts","./src/app/Services/markets.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class MarketDetailsResponse {\r\n    address: string;\r\n    googleAddressUrl: string;\r\n    products: string[];\r\n    schedule: string[];\r\n}","export class MessageModel {\r\n    title: string;\r\n    message: string;\r\n    message2: string;\r\n    button: string;\r\n    timeout: number;\r\n\r\n    constructor(){\r\n        this.button = \"OK\";\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<AboutComponent>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2>About FMF (Farmer's Market Finder)</h2>\r\n<p>This application was constructed using an ASP.NET Core Web API.</p>\r\n<p>The API uses Entity Framework Core and an Azure SQL Database</p>\r\n<p>The front-end (this site) is created using Angular 9 and Material Design Components</p>\r\n<p>With this application, you're able to use either a zip code or your current location to find Farmers' Markets near you.</p>\r\n<p>The list is ordered by distance, and you're able to view details about each farm when clicked on, and favorite the ones you like.</p>\r\n<p>On top of storing and retrieving information about the markets in the SQL Database, all user actions are stored in the database as well, for audit and tracking reasons.</p>\r\n<p>For extras, check out the <a href=\"https://trello.com/b/T5xt0Bd0/farmers-market\" target=\"_blank\">Trello Board</a> that was used to create this project.</p>\r\n<button mat-raised-button (click)=\"close()\">Close</button>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MessageModel } from 'src/app/Models/messageModel';\r\n\r\n@Component({\r\n  selector: 'app-friendly-message',\r\n  templateUrl: './friendly-message.component.html',\r\n  styleUrls: ['./friendly-message.component.scss']\r\n})\r\nexport class FriendlyMessageComponent implements OnInit {\r\n\r\n  message: MessageModel = new MessageModel();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FriendlyMessageComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data,\r\n  ) { \r\n    this.message = data;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.message.timeout > 0) {\r\n      setTimeout(() => {\r\n        this.close();\r\n      }, this.message.timeout);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h3 fxLayoutAlign=\"center center\" *ngIf=\"message\">{{message.title}}</h3>\r\n    <p class=\"message\">{{message.message}}</p>\r\n    <p *ngIf=\"message.message2\">{{message.message2}}</p>\r\n    <div id=\"confirmButtonDiv\" fxLayoutAlign=\"end center\">\r\n      <button mat-raised-button (click)=\"close()\">{{message.button}}</button>\r\n    </div>\r\n  </div>\r\n   ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-load-spinner',\r\n  templateUrl: './load-spinner.component.html',\r\n  styleUrls: ['./load-spinner.component.scss']\r\n})\r\nexport class LoadSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<img class=\"rotate\" src=\"../../../assets/Images/appleLoader.png\"/>\r\n","import { Injectable } from '@angular/core';\r\nimport { Geolocation } from '../Models/geolocation';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GeolocationService {\r\n\r\n  constructor() { }\r\n\r\n  getPosition(): Promise<Geolocation> {\r\n    return new Promise((resolve, reject) => {\r\n      navigator.geolocation.getCurrentPosition(resp => {\r\n        resolve({lat: resp.coords.latitude, lon: resp.coords.longitude});\r\n      }, err => {\r\n        reject(err);\r\n      });\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ListMarketsResponse } from '../Models/listMarketsResponse';\r\nimport { MarketDetailsResponse } from '../Models/marketDetailsResponse';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarketsService {\r\n\r\n  private version: string = \"/v1/market\";\r\n  private baseUrl: string = `${environment.baseUrl}${this.version}`;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  listMarketsByZip(zip: string) {\r\n    const url = `${this.baseUrl}/zip/${zip}`; \r\n    return this.http.get<ListMarketsResponse>(url);\r\n  }\r\n\r\n  listMarketsByLocation(lat: string, lon: string) {\r\n    const url = `${this.baseUrl}/location?lat=${lat}&lon=${lon}`\r\n    return this.http.get<ListMarketsResponse>(url);\r\n  }\r\n\r\n  getMarketDetailsById(marketId: string) {\r\n    const url = `${this.baseUrl}/details/${marketId}`;\r\n    return this.http.get<MarketDetailsResponse>(url);\r\n  }\r\n\r\n  flipFavoriteStatusById(marketId: string) {\r\n    const url = `${this.baseUrl}/favorite/${marketId}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MarketsService } from './Services/markets.service';\r\nimport { Market } from './Models/market';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { GeolocationService } from './Services/geolocation.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FriendlyMessageComponent } from './Modules/friendly-message/friendly-message.component';\r\nimport { AboutComponent } from './Modules/about/about.component';\r\nimport { MarketDetailsResponse } from './Models/marketDetailsResponse';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  markets: Market[] = [];\r\n  marketDetail: MarketDetailsResponse = new MarketDetailsResponse();\r\n  zipFormGroup: FormGroup;\r\n  gettingList: boolean = false;\r\n  gettingDetails: boolean = false;\r\n  \r\n  constructor(\r\n    private marketServ: MarketsService,\r\n    private formBuilder: FormBuilder,\r\n    private geoServ: GeolocationService,\r\n    private dialog: MatDialog,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.zipFormGroup = this.formBuilder.group( {\r\n      zip: ['', [\r\n        Validators.pattern('[0-9]*'),\r\n        Validators.maxLength(5), \r\n        Validators.minLength(5),\r\n      ]],\r\n    });\r\n  }\r\n\r\n  openInfo() {\r\n    this.dialog.open(AboutComponent, {\r\n      width: \"80%\", \r\n      maxWidth: \"500px\",\r\n      height: \"auto\", \r\n      maxHeight: \"95vh\"\r\n    });\r\n  }\r\n\r\n  setGettingListValue() {\r\n    this.gettingList = true;\r\n    setTimeout(() => {\r\n      this.gettingList = false;\r\n    }, 3000);\r\n  }\r\n\r\n  setGettingDetailValue() {\r\n    this.gettingDetails = true;\r\n    setTimeout(() => {\r\n      this.gettingDetails = false;\r\n    }, 10000);\r\n  }\r\n\r\n  checkForEnter(event) {\r\n    if(event.key == \"Enter\") {\r\n      this.listMarketsByZip();\r\n    }\r\n  }\r\n\r\n  listMarketsByZip() {\r\n    if(this.zipFormGroup.valid && this.zipFormGroup.value.zip && this.zipFormGroup.value.zip != \"00000\") {\r\n      this.setGettingListValue();\r\n      this.marketServ.listMarketsByZip(this.zipFormGroup.value.zip).subscribe(list => {\r\n        this.markets = list.response;\r\n        this.gettingList = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  listMarketsByLocation() {\r\n    this.setGettingListValue();\r\n    this.zipFormGroup.reset();\r\n    this.geoServ.getPosition().then(location => {\r\n      if(location && location.lon && location.lon) {\r\n        //if location is found, get list of marekts.\r\n        this.marketServ.listMarketsByLocation(location.lat.toString(), location.lon.toString()).subscribe(list => {\r\n          this.markets = list.response;\r\n          this.gettingList = false;\r\n        });\r\n      }\r\n      else {\r\n        //throw error\r\n        this.gettingList = false;\r\n        this.dialog.open(FriendlyMessageComponent, {\r\n          width: \"auto\", \r\n          height: \"auto\", \r\n          data: {\"title\": \"Permissions Error\", \r\n                \"message\": \"We were not able to find your location.\", \r\n                \"message2\": \"Ensure that locaions is allows for this site.\", \r\n                \"button\": \"OK\"}\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getMarketsDetail(marketId: string) {\r\n    this.setGettingDetailValue();\r\n      this.marketServ.getMarketDetailsById(marketId).subscribe(details => {\r\n        this.marketDetail = details;\r\n        this.gettingDetails = false;\r\n        console.log(\"Market Details\", details);\r\n      });\r\n  }\r\n\r\n  flipFavoriteValue(event:Event, marketId: string) {\r\n    event.stopPropagation()\r\n    let market = this.markets.find(item => item.marketNumber == marketId);\r\n    market.isFavorite = !market.isFavorite;\r\n    this.marketServ.flipFavoriteStatusById(marketId).subscribe(fav => {\r\n      console.log(\"favorite status\", fav);\r\n    });\r\n  }\r\n}\r\n","<div id=\"header\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\">\r\n        <img id=\"FMFLogo\" src=\"./../assets/Images/FMFLogo-250.png\"/>\r\n        <p id=\"FMFName\">Farmer's Market Finder</p>\r\n    </div>\r\n    <mat-icon (click)=\"openInfo()\">info</mat-icon>\r\n</div>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<div id=\"body\" fxLayout=\"column\" fxLayoutAlign=\"start center\">\r\n    <div id=\"innerBodyDiv\">\r\n        <p class=\"bodyText\">Farmer's Market Finder is a great tool that can find farmer's markets by either zip code or using your location.</p>\r\n        <p class=\"bodyText\">You can also favorite markets and view more details about them by clicking on them.</p>\r\n        \r\n        <div id=\"marketList\" fxLayout=\"column\">\r\n            <div id=\"controls\" fxLayout=\"row\" fxLayout.lt-sm=\"column\" fxLayoutAlign.lt-md=\"space-between center\" fxLayoutAlign.lt-lg=\"space-between center\" fxLayoutAlign=\"space-between center\">\r\n                <div id=\"zipCodeForm\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutAlign.lt-sm=\"space-between center\">\r\n                    <form [formGroup]=\"zipFormGroup\">\r\n                        <mat-form-field>\r\n                            <mat-label>Zip Code</mat-label>\r\n                            <input id=\"zip\" matInput formControlName=\"zip\" name=\"zip\" (keyup)=\"checkForEnter($event)\"/>\r\n                            <mat-error *ngIf=\"zipFormGroup.controls['zip'].hasError('pattern') && (zipFormGroup.controls['zip'].dirty || zipFormGroup.controls['zip'].touched)\">\r\n                                Only use digits 0-9.\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"!zipFormGroup.controls['zip'].hasError('pattern') && (zipFormGroup.controls['zip'].hasError('minlength')) || zipFormGroup.controls['zip'].hasError('maxlength') && (zipFormGroup.controls['zip'].dirty || zipFormGroup.controls['zip'].touched)\">\r\n                                Only use 5 digit zip code.\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </form>\r\n                    <button id=\"zipSearchBtn\" mat-raised-button (click)=\"listMarketsByZip()\">Search By Zip</button>\r\n                </div>\r\n                <p> - Or - </p>\r\n                <button id=\"locationSearchBtn\" mat-raised-button (click)=\"listMarketsByLocation()\">Search By My Location</button>\r\n            </div>\r\n\r\n            <div id=\"resultsPane\" *ngIf=\"!gettingList; else loadSpinner\">\r\n\r\n                <mat-accordion *ngIf=\"markets.length > 0; else noMarkets\">\r\n\r\n                    <mat-expansion-panel [expanded]=false hideToggle *ngFor=\"let market of markets\">\r\n                        <mat-expansion-panel-header (click)=\"getMarketsDetail(market.marketNumber)\">\r\n                            <mat-panel-title>\r\n                                <div class=\"marketItem\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n                                    <div fxLayout=\"row\">\r\n                                        <mat-icon class=\"marketIcon\">storefront</mat-icon>\r\n                                        <div fxLayout=\"column\">\r\n                                            <p class=\"marketName\">{{market.name}}</p>\r\n                                            <p class=\"marketDistance\">{{market.distance}} miles away</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <mat-icon class=\"favorite\" *ngIf=\"market.isFavorite; else notFavorite\" (click)=\"flipFavoriteValue($event, market.marketNumber)\">star</mat-icon>\r\n                                    <ng-template #notFavorite>\r\n                                        <mat-icon class=\"notFavorite\" (click)=\"flipFavoriteValue($event, market.marketNumber)\">star_border</mat-icon>\r\n                                    </ng-template>\r\n                                </div>\r\n                            </mat-panel-title>\r\n                        </mat-expansion-panel-header>\r\n                        <mat-divider class=\"detailDivider\"></mat-divider>\r\n                        <div class=\"marketDetails\" *ngIf=\"marketDetail\">\r\n                            <div *ngIf=\"!gettingDetails; else loadSpinner\" fxLayout=\"row\" fxLayoutAlign=\"space-between start\">\r\n                                <div fxFlex=\"45\" fxLayout=\"column\">\r\n                                    <div fxLayout=\"row\">\r\n                                        <mat-icon>location_on</mat-icon>\r\n                                        <div fxLayout=\"column\">\r\n                                            <p class=\"title\">Address:</p>\r\n                                            <p><a href=\"{{marketDetail.googleAddressUrl}}\" target=\"_blank\">{{marketDetail.address}}</a></p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div fxLayout=\"row\">\r\n                                        <mat-icon>schedule</mat-icon>\r\n                                        <div fxLayout=\"column\">\r\n                                            <p class=\"title\">Schedule:</p>\r\n                                            <p *ngFor=\"let item of marketDetail.schedule\">{{item}}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div fxFlex=\"45\" fxLayout=\"column\">\r\n                                    <div fxLayout=\"row\">\r\n                                        <mat-icon>category</mat-icon>\r\n                                        <div fxLayout=\"column\">\r\n                                            <p class=\"title\">Products:</p>\r\n                                            <p *ngFor=\"let item of marketDetail.products\">{{item}}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </mat-expansion-panel>\r\n                </mat-accordion>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #noMarkets>\r\n    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n        <p class=\"bodyText\">No Markets Listed</p>\r\n        <p class=\"bodyText\">Try Searching by Zip or Locaiton</p>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #loadSpinner>\r\n    <div fxLayoutAlign=\"center center\">\r\n        <app-load-spinner></app-load-spinner>\r\n    </div>\r\n</ng-template>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n//Import Material\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { FriendlyMessageComponent } from './Modules/friendly-message/friendly-message.component';\r\nimport { AboutComponent } from './Modules/about/about.component';\r\nimport { LoadSpinnerComponent } from './Modules/load-spinner/load-spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FriendlyMessageComponent,\r\n    AboutComponent,\r\n    LoadSpinnerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n\r\n    // Material\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTreeModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent], \r\n  entryComponents: [\r\n    FriendlyMessageComponent,\r\n    AboutComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false, \r\n  baseUrl: \"https://localhost:44354/api\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}